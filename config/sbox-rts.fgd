// 
// Gamelib.FlowFields.Entities.FlowFieldBlocker : Sandbox.ModelEntity 
// 
@SolidClass 
metadata
{
	auto_apply_material = "materials/gamelib/flowfields/blocker.vmat"
}
= flowfield_blocker : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Gamelib.FlowFields.Entities.FlowFieldGround : Sandbox.FuncBrush 
// 
@SolidClass = flowfield_ground : ""
[
	rendercolor(color255) : "FX Color (R G B)" : "255 255 255" : "The FX color is used by the selected Render Mode."
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enabled(boolean) : "Enabled" : 1 : "Whether this func_brush is visible/active at all"
	solid(boolean) : "Solid" : 1 : "Whether this func_brush has collisions"
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input DisableSolid(void) : "Make this func_brush non solid"
	input EnableSolid(void) : "Make this func_brush solid"
	input ToggleSolid(void) : "Toggle solidity of this func_brush"
	input Enable(void) : "Enable this func_brush, making it visible"
	input Disable(void) : "Disable this func_brush, making it invisible and non solid"
	input Toggle(void) : "Toggle this func_brush"
	input SetColor(string) : ""
]

// 
// Gamelib.DayNight.DayNightController : Sandbox.ModelEntity 
// 
@PointClass 
metadata
{
	entity_tool_name = "Day Night Controller"
	entity_tool_group = "Day Night System"
}
= daynight_controller : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	dawncolor(color255) : "Dawn Color" :  : ""
	dawnskycolor(color255) : "Dawn Sky Color" :  : ""
	daycolor(color255) : "Day Color" :  : ""
	dayskycolor(color255) : "Day Sky Color" :  : ""
	duskcolor(color255) : "Dusk Color" :  : ""
	duskskycolor(color255) : "Dusk Sky Color" :  : ""
	nightcolor(color255) : "Night Color" :  : ""
	nightskycolor(color255) : "Night Sky Color" :  : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""

	output OnBecomeNight(void) : ""
	output OnBecomeDusk(void) : ""
	output OnBecomeDawn(void) : ""
	output OnBecomeDay(void) : ""
]

// 
// Gamelib.DayNight.DayNightProp : Sandbox.ModelEntity 
// 
@PointClass model() = prop_daynight : ""
[
	model(studio) [report]: "World Model" : ""
	skin(materialgroup) [ group="Render Properties" ] : "Skin" : "default" : "Some models have multiple versions of their textures, called skins." 
	bodygroups(bodygroupchoices) [ group="Render Properties" ] : "Body Groups" : "" 
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	skinday(integer) : "Skin For Day" : 0 : ""
	skinnight(integer) : "Skin For Night" : 1 : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Gamelib.DayNight.DayNightWindow : Sandbox.FuncBrush 
// 
@SolidClass 
metadata
{
	entity_tool_name = "Day Night Window Brush"
	entity_tool_group = "Day Night System"
}
= daynight_window : ""
[
	rendercolor(color255) : "FX Color (R G B)" : "255 255 255" : "The FX color is used by the selected Render Mode."
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enabledelay(float) : "Enable Delay Time" : 3 : ""
	disabledelay(float) : "Disable Delay Time" : 3 : ""
	enabled(boolean) : "Enabled" : 1 : "Whether this func_brush is visible/active at all"
	solid(boolean) : "Solid" : 1 : "Whether this func_brush has collisions"
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input DisableSolid(void) : "Make this func_brush non solid"
	input EnableSolid(void) : "Make this func_brush solid"
	input ToggleSolid(void) : "Toggle solidity of this func_brush"
	input Enable(void) : "Enable this func_brush, making it visible"
	input Disable(void) : "Disable this func_brush, making it invisible and non solid"
	input Toggle(void) : "Toggle this func_brush"
	input SetColor(string) : ""
]

// 
// Facepunch.RTS.RTS : Sandbox.Game 
// 
@PointClass = rts : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"
]

// 
// Facepunch.RTS.BuggyEntity : Facepunch.RTS.UnitEntity 
// 
@PointClass = unit_buggy : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.BeerResource : Facepunch.RTS.ResourceEntity 
// 
@PointClass model() = resource_beer : ""
[
	model(studio) [report]: "World Model" : "models/barrels/square_wooden_box_gold.vmdl"
	skin(materialgroup) [ group="Render Properties" ] : "Skin" : "default" : "Some models have multiple versions of their textures, called skins." 
	bodygroups(bodygroupchoices) [ group="Render Properties" ] : "Body Groups" : "" 
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	stock(integer) : "Stock" : 0 : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.MetalResource : Facepunch.RTS.ResourceEntity 
// 
@PointClass model() = resource_metal : ""
[
	model(studio) [report]: "World Model" : "models/rocks/rock_large_00.vmdl"
	skin(materialgroup) [ group="Render Properties" ] : "Skin" : "Metal" : "Some models have multiple versions of their textures, called skins." 
	bodygroups(bodygroupchoices) [ group="Render Properties" ] : "Body Groups" : "" 
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	stock(integer) : "Stock" : 0 : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.PlasmaResource : Facepunch.RTS.ResourceEntity 
// 
@PointClass model() = resource_plasma : ""
[
	model(studio) [report]: "World Model" : "models/rocks/rock_large_00.vmdl"
	skin(materialgroup) [ group="Render Properties" ] : "Skin" : "Plasma" : "Some models have multiple versions of their textures, called skins." 
	bodygroups(bodygroupchoices) [ group="Render Properties" ] : "Body Groups" : "" 
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	stock(integer) : "Stock" : 0 : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.StoneResource : Facepunch.RTS.ResourceEntity 
// 
@PointClass model() = resource_stone : ""
[
	model(studio) [report]: "World Model" : "models/rocks/rock_large_00.vmdl"
	skin(materialgroup) [ group="Render Properties" ] : "Skin" : "Rock" : "Some models have multiple versions of their textures, called skins." 
	bodygroups(bodygroupchoices) [ group="Render Properties" ] : "Body Groups" : "" 
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	stock(integer) : "Stock" : 0 : ""
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.Flamethrower : Facepunch.RTS.Weapon 
// 
@PointClass = weapon_flamethrower : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.Pistol : Facepunch.RTS.Weapon 
// 
@PointClass = weapon_pistol : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.SMG : Facepunch.RTS.Weapon 
// 
@PointClass = weapon_smg : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.TankCannon : Facepunch.RTS.Weapon 
// 
@PointClass = weapon_tank_cannon : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

// 
// Facepunch.RTS.TurretWeapon : Facepunch.RTS.Weapon 
// 
@PointClass = weapon_turret : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : ""
]

